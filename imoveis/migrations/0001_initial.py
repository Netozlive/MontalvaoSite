# Generated by Django 4.0.5 on 2022-09-19 03:32

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imoveis.a


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Corretores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='img_imoveis')),
                ('corretor', models.CharField(default='', max_length=1000)),
                ('numero_corretor', models.CharField(default='', max_length=1000)),
                ('email_corretor', models.CharField(default='', max_length=1000)),
                ('instagram_corretor', models.CharField(default='', max_length=1000)),
                ('facebook_corretor', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Imovei',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proprietario', models.CharField(default='', max_length=1000)),
                ('telefone_proprietario', models.CharField(default='', max_length=1000)),
                ('email_proprietario', models.CharField(default='', max_length=1000)),
                ('nota_proprietario', models.TextField(default='', max_length=1000)),
                ('estado', models.CharField(choices=[('Vazio', 'Vazio'), ('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], default='SP', max_length=20)),
                ('cidade', models.CharField(default='', max_length=1000)),
                ('bairro', models.CharField(default='', max_length=1000)),
                ('rua', models.CharField(default='', max_length=1000)),
                ('numero', models.IntegerField(default=0)),
                ('cep', models.CharField(default='', max_length=1000)),
                ('thumb', models.ImageField(upload_to='img_imoveis')),
                ('titulo', models.CharField(default='', max_length=1000)),
                ('descricao', models.TextField(default='Vazio', max_length=1000)),
                ('tipo', models.CharField(choices=[('Vazio', 'Vazio'), ('Residencial', 'Residencial'), ('Comercial', 'Comercial'), ('Industrial', 'Industrial'), ('Rural', 'Rural'), ('Condominio', 'Condominio'), ('Comercial/Residencial', 'Comercial/Residencial')], default='Vazio', max_length=50)),
                ('categoria', models.CharField(choices=[('Vazio', 'Vazio'), ('Apartamento', 'Apartamento'), ('Casa', 'Casa'), ('Terreno', 'Terreno'), ('Rancho', 'Rancho'), ('Sitio', 'Sitio'), ('Fazenda', 'Fazenda'), ('Fabrica', 'Fabrica')], default='Vazio', max_length=20)),
                ('venda', models.CharField(choices=[('Vazio', 'Vazio'), ('venda', 'venda'), ('vendido', 'vendido'), ('aluguel', 'aluguel')], default='Vazio', max_length=20)),
                ('tipo_autorizacao', models.CharField(choices=[('Vazio', 'Vazio'), ('exclusivo', 'exclusivo'), ('sem_exclusividade', 'sem_exclusividade')], default='Vazio', max_length=20)),
                ('visualizacoes', models.IntegerField(default=0)),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
                ('idd', models.CharField(default=imoveis.a.iddd, max_length=1000)),
                ('valor', models.IntegerField(default=0)),
                ('iptu', models.IntegerField(default=0)),
                ('taxa_condominio', models.IntegerField(default=0)),
                ('consulta', models.CharField(choices=[('Vazio', 'Vazio'), ('sim', 'sim'), ('nao', 'nao')], default='Vazio', max_length=20)),
                ('escritura', models.CharField(choices=[('Vazio', 'Vazio'), ('sim', 'sim'), ('nao', 'nao')], default='Vazio', max_length=20)),
                ('mobiliado', models.CharField(choices=[('Vazio', 'Vazio'), ('sim', 'sim'), ('nao', 'nao')], default='Vazio', max_length=20)),
                ('aceita_permuta', models.CharField(choices=[('Vazio', 'Vazio'), ('sim', 'sim'), ('nao', 'nao')], default='Vazio', max_length=20)),
                ('imovel_desocupado', models.CharField(choices=[('Vazio', 'Vazio'), ('sim', 'sim'), ('nao', 'nao')], default='Vazio', max_length=20)),
                ('imovel_quitado', models.CharField(choices=[('Vazio', 'Vazio'), ('sim', 'sim'), ('nao', 'nao')], default='Vazio', max_length=20)),
                ('vídeo_link', models.CharField(default='#', max_length=1000)),
                ('mais_link', models.CharField(default='#', max_length=1000)),
                ('link_slides', models.CharField(default='#', max_length=1000)),
                ('link_maps', models.CharField(default='#', max_length=1000)),
                ('area_util', models.IntegerField(default=0)),
                ('area_total', models.IntegerField(default=0)),
                ('area_construida', models.IntegerField(default=0)),
                ('material_telhado', models.CharField(choices=[('Vazio', 'Vazio'), ('Laje', 'Laje'), ('Forro', 'Forro')], default='Vazio', max_length=20)),
                ('material_piso', models.CharField(choices=[('Vazio', 'Vazio'), ('Laje', 'Laje'), ('Forro', 'Forro')], default='Vazio', max_length=20)),
                ('interessados', models.TextField(default='Vazio', max_length=10000)),
                ('responsavel_captacao', models.CharField(default='', max_length=1000)),
                ('marketing', models.TextField(default='', max_length=100)),
                ('observacoes_corretores', models.CharField(default='', max_length=1000)),
                ('qtde_andares', models.IntegerField(default=0)),
                ('qtde_comodos', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Plantao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias', models.CharField(choices=[('Domingo', 'Domingo'), ('Segunda-feira', 'Segunda-feira'), ('Terça-feira', 'Terça-feira'), ('Quarta-feira', 'Quarta-feira'), ('Quinta-feira', 'Quinta-feira'), ('Sexta-feira', 'Sexta-feira'), ('Sábado', 'Sábado')], default='', max_length=1000)),
                ('horas', models.CharField(default='', max_length=1000)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imoveis.corretores')),
            ],
        ),
        migrations.CreateModel(
            name='Imagen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='img_imoveis')),
                ('link_comodo', models.CharField(default='#', max_length=10000)),
                ('comodo', models.CharField(choices=[('Vazio', 'Vazio'), ('Área de serviço', 'Área de serviço'), ('Área_Gourmet', 'Área_Gourmet'), ('Banheiro', 'Banheiro'), ('Closet', 'Closet'), ('Corredor', 'Corredor'), ('Cozinha', 'Cozinha'), ('Deck', 'Deck'), ('Despensa', 'Despensa'), ('Dorm', 'Dorm'), ('Edícula', 'Edícula'), ('Escadas', 'Escadas'), ('Escritório', 'Escritório'), ('Faixada', 'Faixada'), ('Garagem', 'Garagem'), ('Jardim de inverno', 'Jardim de inverno'), ('Lavabo', 'Lavabo'), ('Piscina', 'Piscina'), ('quintal/jardim/area_externa', 'quintal/jardim/area_externa'), ('Sacada', 'Sacada'), ('Sala de jantar', 'Sala de jantar'), ('Sala de tv', 'Sala de tv'), ('Sala de visita', 'Sala de visita'), ('Sendo Suítes', 'Sendo Suítes'), ('Varanda', 'Varanda'), ('Personalizado', 'Personalizado')], default='Vazio', max_length=30)),
                ('tamanho_comodo', models.IntegerField(default=0)),
                ('plus_comodo', models.CharField(choices=[('Vazio', 'Vazio'), ('Banheiro', 'Banheiro'), ('Cozinha', 'Cozinha'), ('Dorm', 'Dorm'), ('Banheiro', 'Banheiro'), ('Sendo Suítes', 'Sendo Suítes'), ('quintal/jardim/area_externa', 'quintal/jardim/area_externa'), ('Piscina', 'Piscina'), ('Garagem', 'Garagem'), ('Personalizado', 'Personalizado')], default='Vazio', max_length=30)),
                ('plus_valor', models.IntegerField(default=0)),
                ('ligacao_comodo', models.CharField(default='', max_length=1000)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imoveis.imovei')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ultimo_visto', models.CharField(default='', max_length=1000)),
                ('comparar', models.CharField(default='', max_length=1000)),
                ('favoritos', models.ManyToManyField(related_name='fa', to='imoveis.imovei')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('imoveis_vistos', models.ManyToManyField(related_name='vistos', to='imoveis.imovei')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
